image: docker:dind

definitions:
  scripts:
    - script: &.install-aws |
        apk add aws-cli bash;
    - script: &.aws-web-identity-token |
        echo "unset static credentials to use dynamic credentials via oidc provider"
        unset AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY
        export AWS_REGION=eu-west-1
        export AWS_WEB_IDENTITY_TOKEN_FILE=$(pwd)/web-identity-token
        export AWS_ROLE_SESSION_NAME=${BITBUCKET_REPO_SLUG}-$(date +%Y-%m-%d-%H%M%S)
        echo $BITBUCKET_STEP_OIDC_TOKEN > $(pwd)/web-identity-token
    - script: &.aws-s3-eng-dev-role |
        export AWS_ROLE_ARN=arn:aws:iam::486666591348:role/terraform-iam-role

    - script: &.build-conda-package-mpi-cuda |
        python build-locally.py 'linux_64_cuda_compiler_version11.2cxx_compiler_version10doublenompiopenmpi'
    - script: &.build-conda-package-mpi |
        python build-locally.py 'linux_64_cuda_compiler_versionNonecxx_compiler_version12doublenompiopenmpi'

    - script: &.remove-old-build |
        # Remove the old package first
        file=$(find build_artifacts/linux-64 -name "*.conda")
        CONDA_NAME=$(basename "$file")
        aws s3 rm s3://exs-conda-packages/linux-64/$CONDA_NAME
        # Wait 2 minutes for the conda index to update.
        sleep 120

  services:
    docker:
      memory: 14336
      image: docker:dind

steps:
  - step: &build-package-mpi-cuda
      name: Build gromacs Conda Package MPI cuda
      runs-on:
        - "self.hosted"
        - "wr.large"
      size: 4x
      oidc: true
      services:
        - docker
      script:
        - *.install-aws
        - *.aws-web-identity-token
        - *.aws-s3-eng-dev-role
        - *.build-conda-package-mpi-cuda
      artifacts:
        download: false # avoid loading earlier artifacts as not needed
        paths:
          - build_artifacts/linux-64/*.conda

  - step: &build-package-mpi
      name: Build gromacs Conda Package MPI
      runs-on:
        - "self.hosted"
        - "wr.large"
      size: 4x
      oidc: true
      services:
        - docker
      script:
        - *.install-aws
        - *.aws-web-identity-token
        - *.aws-s3-eng-dev-role
        - *.build-conda-package-mpi
      artifacts:
        download: false # avoid loading earlier artifacts as not needed
        paths:
          - build_artifacts/linux-64/*.conda

  - step: &deploy-package # depends on artifacts: dist/
      name: Upload Python package Exscientia conda.exsapps.com server
      # deployment: conda # <-- configure on bitbucket if you want deployment tracking
      image: amazon/aws-cli:latest
      oidc: true
      script:
        - *.aws-web-identity-token
        - *.aws-s3-eng-dev-role
        - *.remove-old-build
        - aws s3 cp $(realpath build_artifacts/linux-64/*.conda) s3://exs-conda-packages/linux-64/

pipelines:
  default:
    - parallel:
        - step: *build-package-mpi-cuda
        - step: *build-package-mpi
    - step: *deploy-package
